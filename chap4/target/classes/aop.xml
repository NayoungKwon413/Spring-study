<?xml version="1.0" encoding="UTF-8"?>
<!-- /src/main/java/aop.xml -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	     http://www.springframework.org/schema/beans/spring-beans.xsd 
	     http://www.springframework.org/schema/context 
	     http://www.springframework.org/schema/context/spring-context.xsd 
	     http://www.springframework.org/schema/aop 
	     http://www.springframework.org/schema/aop/spring-aop.xsd">
<bean id="write" class="spring.WriteImpl">
	<!-- articleDao 객체를 주입할 것 -->
	<constructor-arg><ref bean="articleDao" /></constructor-arg> 
</bean>
<bean id="read" class="spring.ReadImpl">
	<constructor-arg><ref bean="articleDao" /></constructor-arg>
</bean>
<!-- articleDao는 spring 패키지에 MariadbArticleDao 객체임 -->
<bean id="articleDao" class="spring.MariadbArticleDao" />
<bean id="logging" class="spring.LoggingAspect" />
<!-- aop 설정 -->
<aop:config>
	<!-- pointcut : 기본 메서드. 원래 기능으로서 필요한 기본 메서드를 지정하는 것. => 언제 끼어들지 결정해주는 것
		 spring.*Impl : spring 패키지 클래스 중 클래스 이름 끝이 impl로 끝나는 클래스
		 *(..) : 매개변수와 상관없이 모든 메서드
		 => spring 패키지의 클래스 중 이름이 Impl로 끝나는 모든 public 메서드를 aop 대상이 되는 기본 메서드로 지정
		 => 이들을 servicepointcut 이라는 이름으로 명칭
	 -->
	<aop:pointcut expression="execution(public * spring.*Impl.*(..))" id="servicepointcut"/>
	<!-- aspect : aop의 대상이 되는 클래스 지정 -->
	<aop:aspect id="loggingAspect" ref="logging" >
		<!-- around : advice의 한 종류. 기본메서드의 실행 전, 후 모두 실행
			 advice : aop 가 실행되는 시점을 설정 -->
		<aop:around method="logging" pointcut-ref="servicepointcut" />
	</aop:aspect>
</aop:config>
<!-- 
	aop 관련 용어
	   pointcut : aop 대상이 되는 메서드 설정 => 기본메서드(업무단으로 꼭 해야하는, 필요한 메서드)
	   aspect   : aop로 사용되는 클래스의 객체 지정
	   advice   : pointcut 메서드 실행 시점 지정
	     around : pointcut 메서드 실행 전후 제어(실행 전에 끼어들어서 실행 후까지 제어)
	     before : pointcut 메서드 실행 전에만
	     after  : pointcut 메서드 실행 후에만
	     afterReturning : 정상 종료된 실행 후 
	     afterThrowing : 예외 종료된 실행 후
 -->
</beans>